cmake -G  "Visual Studio 15 2017 Win64" ..
ffmpeg.exe -i screen.mp4 -i screen.mp4 -filter_complex "nullsrc=size=2560*1440[base];[0:v]scale=iw/2:ih/2[left];[1:v]scale=iw/2:ih/2[right];[base][left]overlay=0:0[temp1];[temp1][right]overlay=w:0" out.mp4 //拼接视频
ffmpeg.exe -re -i screen.mp4 -rtsp_transport tcp -vcodec copy -f rtsp rtsp://192.168.2.66/test //视频文件推流
ffmpeg.exe -rtsp_transport tcp -i rtsp://admin:123ABCabc@10.10.1.9:554/H.264/ch36/main/av_stream -rtsp_transport tcp  -vcodec copy -f rtsp rtsp://192.168.2.66/camera //rtsp流重定向
ffmpeg -i person.mp4 -threads 2 -vcodec h264 person_h264.mp4
ffmpeg -threads 2 -re -fflags +genpts -stream_loop -1 -i 1080p.mkv -rtsp_transport tcp -vcodec copy -f rtsp rtsp://192.168.2.66/1080p.mkv //多线程，循环推流
ffplay -rtsp_transport tcp -i rtsp://localhost:556/ai_live/1
ffmpeg -f gdigrab -i desktop eguid.mp4 //桌面视频录制
ffmpeg -f gdigrab -i desktop -vcodec libx264 -rtsp_transport tcp -preset:v ultrafast -tune:v zerolatency -pix_fmt yuv420p -f rtsp rtsp://10.10.8.74/whl_desktop //桌面推流
ffmpeg -f gdigrab -i desktop -vcodec libx264 -rtsp_transport tcp -pix_fmt yuv420p -f rtsp rtsp://192.168.2.66/whl_desktop //桌面推流质量较好
//本地摄像头推流
ffmpeg -list_devices true -f dshow -i dummy //找出本摄像头名字
ffmpeg -f dshow -i video="Logitech HD Webcam C270" -vcodec libx264 -rtsp_transport tcp -acodec copy -preset:v ultrafast -tune:v zerolatency -f rtsp rtsp://192.168.2.66/whl_logitech //用上面的摄像头推流
//拉流保存成视频
ffmpeg -re -i rtsp://<ip>/stream1 -rtsp_transport tcp -codec copy -f mp4 -movflags frag_keyframe+empty_moov+default_base_moof -frag_duration 4 camera.mp4 
ffmpeg.exe -i rtsp://admin:123ABCabc@10.10.1.6:554/H.264/ch36/main/av_stream -rtsp_transport tcp test.mp4

https://github.com/gitHubwhl562916378/FaceDetector.git
sudo add-apt-repository "deb http://security.ubuntu.com/ubuntu xenial-security main"
sudo apt-get install libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev libavresample-dev python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev
cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local/opencv-4.3.0  -DWITH_CUDA=ON -DWITH_NVCUVID=ON  -DOPENCV_ENABLE_NONFREE=ON -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_EXAMPLES=OFF -DOPENCV_EXTRA_MODULES_PATH=/workspaces/tensorrt-v7.0/build_install/opencv_contrib/modules && make -j4

#cpprest-sdk build
sudo apt-get install libwebsocketpp-dev
sudo apt-get install libboost-all-dev

#poco, add mysql build. deployed
sudo apt-get install libmysql++-dev

rtmp://202.69.69.180:443/webcast/bshdlive-pc

ffmpeg -re -i screen.mp4 -rtsp_transport tcp -vcodec copy -f rtsp rtsp://192.168.0.102/screen.mp4
ffmpeg -i your_name.mkv -profile:v main -level 4.2 your_name_main.mkv

PKG_CONFIG_PATH=/usr/local/lib/pkgconfig \
./configure --prefix=/usr/local/ffmpeg-4.3 \
--enable-debug \
--enable-shared \
--disable-static \
--arch=x86_64 \
--enable-stripping \
--enable-optimizations \
--disable-x86asm \
--enable-asm \
--disable-iconv \
--extra-cflags=-I./nv-codec-headers/include \
--extra-cflags=-I/usr/local/cuda/include \
--extra-ldflags=-L/usr/local/cuda/lib64 \
--disable-schannel \
--disable-xlib \
--disable-zlib \
--enable-protocol=file \
--enable-cuda-nvcc \
--enable-cuda \
--enable-cuvid \
--enable-nvenc \
--enable-nonfree \
--enable-libnpp \
--enable-outdev=sdl2 \
--enable-nonfree \
--enable-version3 \
--enable-gpl \
--enable-ffmpeg \
--enable-ffplay

https://renzhesub.com/link/2tFcm8KPpY8ASIsL?sub=1 ShadowsocksR-dotnet4.0